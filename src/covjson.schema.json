{
  "$id": "/schemas/domain",
  "description": "A Domain, which defines a set of positions and their extent in one or more referencing systems",
  "type": "object",
  "properties": {
    "type": {
      "const": "Domain"
    },
    "domainType": {
      "type": "string"
    },
    "axes": {
      "type": "object",
      "description": "Set of Axis objects, keyed by axis identifier",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/anyAxis"
        }
      }
    },
    "referencing": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/referenceSystemConnection"
      }
    }
  },
  "required": [
    "type",
    "axes"
  ],
  "$schema": "http://json-schema.org/draft-07/schema",
  "definitions": {
    "anyAxis": {
      "description": "Validates any axis",
      "if": {
        "required": [
          "values"
        ]
      },
      "then": {
        "$ref": "#/definitions/valuesAxis"
      },
      "else": {
        "$ref": "#/definitions/numericRegularlySpacedAxis"
      }
    },
    "i18n": {
      "type": "object",
      "description": "Object representing an internationalised string. TODO test that the keys are valid language identifiers",
      "patternProperties": {
        ".+": {
          "type": "string"
        }
      }
    },
    "numericAxis": {
      "description": "Simple axis with numeric values",
      "if": {
        "required": [
          "values"
        ]
      },
      "then": {
        "$ref": "#/definitions/numericValuesAxis"
      },
      "else": {
        "$ref": "#/definitions/numericRegularlySpacedAxis"
      }
    },
    "numericRegularlySpacedAxis": {
      "description": "A regularly-spaced numeric axis",
      "properties": {
        "start": {
          "type": "number"
        },
        "stop": {
          "type": "number"
        },
        "num": {
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "start",
        "stop",
        "num"
      ],
      "additionalProperties": false
    },
    "numericValuesAxis": {
      "description": "Axis defined by list of numeric axis values and optional bounds",
      "allOf": [
        {
          "$ref": "#/definitions/valuesAxisBase"
        },
        {
          "properties": {
            "values": {
              "items": {
                "type": "number"
              }
            },
            "bounds": {
              "items": {
                "type": "number"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "polygonValuesAxis": {
      "description": "Polygon-based axis",
      "allOf": [
        {
          "$ref": "#/definitions/valuesAxisBase"
        },
        {
          "properties": {
            "dataType": {
              "const": "polygon"
            },
            "values": {
              "items": {
                "description": "A GeoJSON polygon",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "description": "The inner array: the coordinates themselves",
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2
                  },
                  "minItems": 1
                },
                "minItems": 1
              }
            },
            "coordinates": {}
          },
          "required": [
            "dataType",
            "values",
            "coordinates"
          ],
          "additionalProperties": false
        }
      ]
    },
    "primitiveValuesAxis": {
      "description": "Validates any axis with primitive values",
      "allOf": [
        {
          "$ref": "#/definitions/valuesAxisBase"
        },
        {
          "$comment": "This redundant branch exists to fail early with succinct errors",
          "properties": {
            "values": {
              "items": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "values": {
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "then": {
            "$ref": "#/definitions/numericValuesAxis"
          },
          "else": {
            "$ref": "#/definitions/stringValuesAxis"
          }
        }
      ]
    },
    "referenceSystem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "TemporalRS"
              }
            }
          },
          "then": {
            "description": "Temporal reference system",
            "properties": {
              "calendar": {
                "type": "string"
              },
              "timeScale": {
                "type": "string"
              }
            },
            "required": [
              "calendar"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "IdentifierRS"
              }
            }
          },
          "then": {
            "description": "An identifier-based reference system",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "$ref": "#/definitions/i18n"
              },
              "description": {
                "$ref": "#/definitions/i18n"
              },
              "targetConcept": {
                "$ref": "#/definitions/targetConcept"
              },
              "identifiers": {
                "type": "object",
                "patternProperties": {
                  ".+": {
                    "$ref": "#/definitions/targetConcept"
                  }
                }
              }
            },
            "required": [
              "targetConcept"
            ]
          }
        }
      ]
    },
    "referenceSystemConnection": {
      "description": "Reference System Connection object: connects coordinates to reference systems",
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "system": {
          "$ref": "#/definitions/referenceSystem"
        }
      },
      "required": [
        "coordinates",
        "system"
      ]
    },
    "stringValuesAxis": {
      "description": "Simple axis with string values (e.g. time strings)",
      "allOf": [
        {
          "$ref": "#/definitions/valuesAxisBase"
        },
        {
          "properties": {
            "values": {
              "items": {
                "type": "string"
              }
            },
            "bounds": {
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "targetConcept": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "$ref": "#/definitions/i18n"
        },
        "description": {
          "$ref": "#/definitions/i18n"
        }
      },
      "required": [
        "label"
      ]
    },
    "tupleValuesAxis": {
      "description": "Tuple-based axis",
      "allOf": [
        {
          "$ref": "#/definitions/valuesAxisBase"
        },
        {
          "properties": {
            "dataType": {
              "const": "tuple"
            },
            "values": {
              "items": {
                "description": "A tuple of axis values (numbers or strings)",
                "type": "array",
                "items": {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                "minItems": 2
              }
            },
            "coordinates": {}
          },
          "required": [
            "dataType",
            "values",
            "coordinates"
          ],
          "additionalProperties": false
        }
      ]
    },
    "valuesAxis": {
      "description": "Validates any values-based axis",
      "allOf": [
        {
          "$ref": "#/definitions/valuesAxisBase"
        },
        {
          "if": {
            "not": {
              "required": [
                "dataType"
              ]
            }
          },
          "then": {
            "$ref": "#/definitions/primitiveValuesAxis"
          }
        }
      ],
      "dependencies": {
        "dataType": {
          "allOf": [
            {
              "if": {
                "properties": {
                  "dataType": {
                    "const": "tuple"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/tupleValuesAxis"
              }
            },
            {
              "if": {
                "properties": {
                  "dataType": {
                    "const": "polygon"
                  }
                }
              },
              "then": {
                "$ref": "#/definitions/polygonValuesAxis"
              }
            }
          ]
        }
      }
    },
    "valuesAxisBase": {
      "$comment": "Base schema for values-based axis schemas",
      "properties": {
        "dataType": {
          "type": "string",
          "not": {
            "const": "primitive"
          }
        },
        "values": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2
        },
        "bounds": {
          "description": "Optional axis bounds. Must be twice as long (and same data type) as \"values\"",
          "type": "array",
          "minItems": 2
        }
      },
      "required": [
        "values"
      ]
    }
  },
  "dependencies": {
    "domainType": {
      "allOf": [
        {
          "if": {
            "properties": {
              "domainType": {
                "const": "Grid"
              }
            }
          },
          "then": {
            "description": "Grid domain: x and y are required, z and t optional",
            "properties": {
              "axes": {
                "properties": {
                  "x": {
                    "$ref": "#/definitions/numericAxis"
                  },
                  "y": {
                    "$ref": "#/definitions/numericAxis"
                  },
                  "z": {
                    "$ref": "#/definitions/numericAxis"
                  },
                  "t": {
                    "$ref": "#/definitions/stringValuesAxis"
                  }
                },
                "required": [
                  "x",
                  "y"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "domainType": {
                "const": "Trajectory"
              }
            }
          },
          "then": {
            "description": "Trajectory domain: mandatory composite axis and optional z axis",
            "properties": {
              "axes": {
                "properties": {
                  "composite": {
                    "$ref": "#/definitions/tupleValuesAxis"
                  },
                  "z": {
                    "$ref": "#/definitions/numericAxis"
                  }
                },
                "required": [
                  "composite"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      ]
    }
  }
}